//==================================================================================================================================//
//!< @file		slTemplateFunction.h
//!< @brief		テンプレート関数群のヘッダ
//!< @author	T.Haga
//!< @data		作成日時：2017/09/09
//==================================================================================================================================//

#ifndef SL_TEMPLATE_FUNCTION_H
#define SL_TEMPLATE_FUNCTION_H

#include "../../slBuild.h"

namespace sl
{

//======================================================================//
//!< ライブラリ共通
//======================================================================//

/** 
* 安全解放テンプレート関数
* @param[in] pointer 解放したいインスタンスへのポインタ
*/
template<class T>
inline void SafeDelete(T*& pointer)
{
	if(pointer != nullptr)
	{
		delete pointer;
		pointer = nullptr;
	}
}

//======================================================================//
//!< DirectX用
//======================================================================//

#ifdef DIRECT_X_11

/** 
* DirectX用 解放テンプレート関数
* @param[in] dxPointer 解放したいDirectX関連のポインタ
*/
template <class T>
inline void SafeReleaseDX(T*& dxPointer)
{
	if(dxPointer != nullptr)
	{
		dxPointer->Release();
		dxPointer = nullptr
	}
}

#endif	// DIRECT_X_11

}	// namespace sl

#endif	// SL_TEMPLATE_FUNCTION_H

//==================================================================================================================================//
// END OF FILE
//==================================================================================================================================//

